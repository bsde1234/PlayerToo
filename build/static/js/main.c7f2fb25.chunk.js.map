{"version":3,"sources":["firebase.js","context.js","Pages/Listing/RequestModal.js","Pages/Home/Games.js","Pages/Home/HomePage.js","Pages/Listing/ListingPage.js","Pages/Confirm/ConfirmationPage.js","Pages/FireStoreExamples/FireStoreUsersPage.js","Pages/FireStoreExamples/FireStoreGamesPage.js","Pages/FireStoreExamples/FireStoreListingsPage.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","ref","fireDb","firestore","AppState","createContext","Provider","options","i","push","key","text","value","rentalDuration","RequestModal","open","setIsModalOpen","game","Modal","closeIcon","onClose","Header","as","Subheader","content","Content","Grid","Row","Column","width","Image","avatar","src","size","style","fontWeight","lender","firstname","lastname","color","username","Icon","name","rating","paddingTop","paddingBottom","email","Dropdown","placeholder","fluid","selection","textColor","paddingLeft","Actions","Button","Link","to","id","Games","data","useState","isModalOpen","Card","Group","itemsPerRow","map","fontSize","floated","distance","Meta","fontStyle","minPlayers","maxPlayers","Description","marginRight","marginLeft","images","extra","onClick","basic","PageHeader","Segment","attached","backgroundColor","textAlign","inverted","HomePage","useContext","relevantGames","setRelevantGames","contextRef","createRef","searched","setSearched","Sticky","context","Container","columns","padded","Input","onChange","input","target","console","log","temp","temp2","filter","item","toUpperCase","indexOf","updateData","bind","icon","iconPosition","ListingPage","listing","useParams","margin","description","tags","g","Label","Feed","Event","image","Summary","Date","Rating","defaultRating","maxRating","disabled","display","justifyContent","alignItems","ConfirmationPage","loading","setLoading","useEffect","setTimeout","marginTop","Loader","active","Fragment","UserTableExample","users","setUsers","collection","orderBy","get","then","docSnaps","usersData","forEach","doc","Table","celled","collapsing","HeaderCell","Body","u","Cell","display_pic","rounded","age","birthday","gender","phone","credit_card","number","pin","security","expiration","GameTableExample","games","setGames","limit","gameData","original","max_players","min_players","primary_publisher","join","year_published","ListingsTableExample","listings","setListings","listingsData","a","Promise","all","game_id","gameDoc","lender_id","lenderDoc","joinAndPushData","l","whiteSpace","maxWidth","JSON","stringify","borrowed","App","length","exact","path","render","FireStoreUsersPage","FireStoreGamesPage","FireStoreListingsPage","ReactDOM","children","setData","handleData","snap","val","on","error","alert","off","api","document","getElementById"],"mappings":"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","file":"static/js/main.c7f2fb25.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport { apiKey } from './api-key';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDZuvDGMSaJunf_6ii8UosPY6sQNr-o5d8\",\n  authDomain: \"boar-d6042.firebaseapp.com\",\n  databaseURL: \"https://boar-d6042.firebaseio.com\",\n  projectId: \"boar-d6042\",\n  storageBucket: \"boar-d6042.appspot.com\",\n  messagingSenderId: \"97299538707\",\n  appId: \"1:97299538707:web:232705d5421931947770e6\",\n  measurementId: \"G-6C5XDWMN1Z\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const db = firebase.database().ref();\nexport const fireDb = firebase.firestore();","import React, { useEffect, createContext, useState } from 'react';\nimport { db } from './firebase';\n\nconst AppState = createContext(null);\nconst { Provider } = AppState; \n\nconst StateProvider = ({ children }) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const handleData = snap => {\n      if (snap.val()) setData(snap.val());\n    }\n    db.on('value', handleData, error => alert(error));\n    return () => { db.off('value', handleData); };\n  }, []);\n  console.log(data)\n  const api = { data };\n  return <Provider value={api}>{children}</Provider>;\n};\n\nexport { AppState, StateProvider };","import React from 'react';\nimport { Modal, Grid, Button, Image, Icon, Dropdown, Header } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst RequestModal = ({ open, setIsModalOpen, game }) => {\n  \n  return (\n    <Modal \n      closeIcon\n      open={open} \n      onClose={() => setIsModalOpen(false)}\n    >\n      <Modal.Header>\n        <Header as=\"h3\">\n          Request Boardgame \n          <Header.Subheader content={game.game} />\n        </Header>\n      </Modal.Header>\n      <Modal.Content>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column  width={4}>\n              <Image avatar src=\"../../assets/images/default.jpg\" size='tiny'/>\n            </Grid.Column>\n            <Grid.Column width={12}>\n            <Grid.Row style={{fontWeight: 'bold'}}>\n                {game.lender.firstname} {game.lender.lastname}\n              </Grid.Row>\n              <Grid.Row style={{color:'grey'}}>\n                  {game.lender.username}\n              </Grid.Row>\n              <Grid.Row>\n                <Icon name=\"star\" />{game.rating}\n              </Grid.Row>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column style={{paddingTop:\"10\", paddingBottom:\"10\"}}>\n              <Icon name=\"home\"/> Evanston, IL {/* TODO: GET FROM DATABASE */}\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row style={{paddingTop:\"10\", paddingBottom:\"10\"}}>\n            <Grid.Column>\n              <Icon name=\"envelope\"/> {game.lender.email}\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <h3>Rental Period</h3>\n              <Dropdown\n                placeholder='Select Duration'\n                fluid\n                selection\n                textColor = 'black'\n                options={options}\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <h3>Recomended Meetup Location</h3>\n              <Grid.Column style={{color:'grey', paddingLeft:'2.5%'}}>\n                Evanston, IL {/* TODO: FETCH FROM BACKEND */}\n              </Grid.Column>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button \n          as={Link}\n          to={`/confirm/${game.id}`}\n          color=\"yellow\" \n          content=\"Submit Request\" \n          fluid\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nconst rentalDuration = () => {\n  let options = [];\n  for (let i = 1; i < 15; i++) {\n    options.push({ key: i, text: `${i} days`, value: i})\n  }\n  return options; \n};\n\nconst options = rentalDuration();\n\nexport default RequestModal;","import React, { useState } from 'react';\nimport { Card, Icon, Header, Button, Image } from 'semantic-ui-react';\nimport RequestModal from '../Listing/RequestModal';\nimport { Link } from 'react-router-dom';\n\nconst Games = ({ data }) => {\n  const [isModalOpen, setIsModalOpen] = useState(null);\n\n  return (\n    <Card.Group itemsPerRow={1}>\n      {data.map(game => \n        <Card key={game.id}>\n          <Card.Content as={Link} to={`/${game.id}`}>\n            <Header style={{fontWeight: \"lighter\", fontSize: \"12px\"}} floated='right' content={game.distance} />\n            <Card.Header content={game.game} />\n            <Card.Meta style={{ fontStyle: \"italic\", fontSize: \"13px\" }}>\n              {game.minPlayers}-{game.maxPlayers} Players\n            </Card.Meta> \n            <Card.Description style={{ color: \"grey\", fontWeight: \"bold\", fontSize: \"12px\" }}>\n              {game.lender.username} {<Icon style={{marginRight: \"0px\", marginLeft: \"10px\"}} name=\"star\" />}{game.rating}\n            </Card.Description>\n          </Card.Content>\n          <Image.Group size=\"tiny\">\n            <Image src={game.images[0]} />\n            <Image src={game.images[1]} />\n            <Image src={game.images[2]} />\n          </Image.Group>\n          <Card.Content extra>\n            <Button\n              onClick={() => setIsModalOpen(game.id)} \n              basic\n              color=\"yellow\" \n              content=\"Borrow Now\" \n              fluid \n            />\n          </Card.Content>\n          <RequestModal open={isModalOpen===game.id} setIsModalOpen={() => setIsModalOpen(false)} game={game} />\n        </Card>\n      )}\n    </Card.Group>\n  );\n};\n\nexport default Games","import React, { useState, useContext, createRef } from 'react';\nimport { AppState } from '../../context';\nimport Games from './Games';\nimport { Button, Header, Container, Segment, Sticky, Grid, Input } from 'semantic-ui-react';\n\nconst HomePage = () => {\n  const state = useContext(AppState);\n  const { data } = state;\n  const [relevantGames, setRelevantGames]= useState(data);\n  const contextRef = createRef();\n  const [searched, setSearched]=useState(\"\");\n\n  function handleMessage(input) {\n    setSearched(input.target.value); \n    console.log(\"this is searched\")\n    console.log(searched); \n    updateData(input.target.value);\n  }\n  function updateData(searched){\n    console.log(\"reached updateData\")\n    const temp=data;\n    const temp2=data.filter(item=>(item.game.toUpperCase().indexOf(searched.toUpperCase()) !== -1));\n    \n    setRelevantGames(searched !== \"\" ? temp2 : temp);\n    console.log(\"new relevant games\");\n    console.log(relevantGames);\n  }\n  \n  return (\n    <div ref={contextRef}>\n      <Sticky context={contextRef}>\n        <PageHeader />\n      </Sticky>\n      <Container>\n        <Grid columns={1} padded>\n          <Grid.Row>\n            <Grid.Column>\n              <Input fluid onChange={handleMessage.bind(this)} icon='search' iconPosition='left' placeholder=\"Search...\" />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <Games data={relevantGames} />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nconst PageHeader = () => {\n  return (\n    <Segment\n      basic\n      attached='top'\n      style={{ backgroundColor: \"orange\", textAlign: \"center\" }}\n      fluid=\"true\"\n    >\n      <Header inverted content=\"Player, Too\" size=\"large\" />\n    </Segment>\n  );\n};\n\nexport default HomePage;","import React, { useContext, useState, createRef } from 'react';\nimport { AppState } from '../../context';\nimport { useParams, Link } from 'react-router-dom';\nimport RequestModal from './RequestModal';\nimport { Grid, Feed, Rating, Segment, Image, Button, Header, Label, Container, Sticky } from 'semantic-ui-react';\n\nconst ListingPage = () => {\n  const appState = useContext(AppState);\n  const { data } = appState;\n  const contextRef = createRef();\n  const { id } = useParams(); \n  const listing = data[id];\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  \n  return (\n    <div ref={contextRef}>\n      <Sticky context={contextRef}>\n        <PageHeader />\n      </Sticky>\n      <Container>\n        <RequestModal \n          open={isModalOpen} \n          setIsModalOpen={setIsModalOpen}\n          game={listing} \n        />\n        <Grid>\n          <Grid.Row style={{ textAlign: \"center\"}}>\n            <Image.Group size=\"small\">\n              <Image src={listing.images[0]} />\n              <Image src={listing.images[1]} />\n              <Image src={listing.images[2]} />\n            </Image.Group>\n          </Grid.Row>\n          <Grid.Row style={{ margin: \"0px 10px 0px 10px \" }}>\n            <Header>\n              {listing.game}\n              <Header.Subheader\n                content={`${listing.minPlayers}-${listing.maxPlayers} Players`}\n                style={{ fontStyle: \"italic\", color: \"black\" }}\n              />\n              <Header.Subheader content={listing.description} />\n            </Header>\n          </Grid.Row>\n          <Grid.Row style={{ margin: \"0px 10px 0px 10px \" }}>\n            <Header size=\"small\">\n              Tags:\n              {listing.tags.map(g => <Label content={g} />)}\n            </Header>\n          </Grid.Row>\n          <Feed>\n            <Header size=\"small\">\n              Owner\n            </Header>\n            <Feed.Event>\n              <Feed.Label image='./assets/images/default.jpg' />\n              <Feed.Content>\n                <Feed.Summary>\n                  {listing.lender.firstname} {listing.lender.lastname}<br />\n                  <Feed.Date content={listing.lender.username} />\n                  <br />\n                  <Rating defaultRating={listing.rating} maxRating={5} disabled />\n                </Feed.Summary>\n              </Feed.Content>\n            </Feed.Event>\n          </Feed>\n          <Grid.Row style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}>\n            <Button fluid color='yellow' onClick={() => setIsModalOpen(true)}>Borrow Now</Button>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nconst PageHeader = () => (\n  <Segment\n    basic\n    attached='top'\n    style={{ backgroundColor: \"orange\"}}\n    fluid=\"true\"\n  >\n    <Header content=\"\" size=\"large\">\n      <Button \n        style={{ backgroundColor: \"orange\"}}\n        icon=\"arrow left\" \n        as={Link}\n        to='/'\n      />\n    </Header>\n  </Segment>\n);\n\nexport default ListingPage;","import React, { useContext, createRef, useEffect, useState } from 'react';\nimport { AppState } from '../../context';\nimport { Link, useParams } from 'react-router-dom';\nimport { Header, Segment, Button, Icon, Container, Sticky, Loader } from 'semantic-ui-react';\n\nconst ConfirmationPage = () => {\n  const state = useContext(AppState);\n  const { data } = state;\n  const { id } = useParams(); \n  const listing = data[id];\n  const contextRef = createRef();\n  \n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => setLoading(false), 1000);\n  }, []);\n\n  return (\n    <div ref={contextRef}>\n      <Sticky context={contextRef}>\n        <PageHeader />\n      </Sticky>\n      <Container style={{ marginTop: \"15px\"}}>\n        {loading ? <Loader active style={{marginTop: \"15px\" }} size=\"huge\">Confirming boardgame request...</Loader> :\n          <React.Fragment>\n            <Header as=\"h1\" icon>\n              <Icon color=\"yellow\" name='check circle' />\n              We've notified {listing.lender.firstname} that you would like to borrow their game: <p style={{color: \"orange\" }}>{listing.game}</p>\n              <Header.Subheader>\n                If {listing.lender.firstname} accepts your booking, you will get a notification so you can arrange a meetup!\n              </Header.Subheader>\n              <br />\n              <Header.Subheader>\n                Happy playing!\n              </Header.Subheader>\n            </Header>\n            <br />\n            <br />\n            <Button content=\"Back to Listings\" as={Link} to=\"/\" fluid color=\"yellow\" />\n          </React.Fragment>\n        }\n      </Container>\n    </div>\n  );\n};\n\nconst PageHeader = () => {\n  return (\n    <Segment\n      basic\n      attached='top'\n      style={{ backgroundColor: \"orange\", textAlign: \"center\" }}\n      fluid=\"true\"\n    >\n      <Header content=\"Confirmation\" inverted size=\"large\" />\n    </Segment>\n  );\n};\n\nexport default ConfirmationPage;","import React, { useEffect, useState } from 'react';\nimport { fireDb } from '../../firebase';\n\nimport { Header, Image, Table } from 'semantic-ui-react';\n\nconst UserTableExample = () => {\n    const [users, setUsers] = useState([]);\n\n    // Querying example for users\n    useEffect(() => {\n        fireDb\n            .collection('Users')\n            .orderBy('age', 'desc')\n            // .limit(100)\n            .get()\n            .then(docSnaps => {\n                const usersData = [];\n                docSnaps.forEach(doc => usersData.push(doc.data()));\n                setUsers(usersData);\n            });\n    }, []);\n\n    console.log(users);\n\n    return (\n        <Table celled collapsing>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>User Id</Table.HeaderCell>\n                    <Table.HeaderCell>Basic Info</Table.HeaderCell>\n                    <Table.HeaderCell>Contact Info</Table.HeaderCell>\n                    <Table.HeaderCell>Distance</Table.HeaderCell>\n                    <Table.HeaderCell>Credit Card Info</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {users.map(u => (\n                    <Table.Row key={u.id}>\n                        <Table.Cell>{u.id}</Table.Cell>\n                        <Table.Cell>\n                            <Header as=\"h4\" image>\n                                <Image\n                                    src={u.display_pic}\n                                    rounded\n                                    size=\"mini\"\n                                />\n                                <Header.Content>\n                                    {u.name}\n                                    <Header.Subheader>\n                                        age: {u.age} <br />\n                                        birthday: {u.birthday} <br />\n                                        gender: {u.gender} <br />\n                                        rating: {u.rating} <br />\n                                    </Header.Subheader>\n                                </Header.Content>\n                            </Header>\n                        </Table.Cell>\n                        <Table.Cell>\n                            <Header>\n                                <Header.Subheader>\n                                    phone: {u.phone} <br />\n                                    email: {u.email}\n                                </Header.Subheader>\n                            </Header>\n                        </Table.Cell>\n                        <Table.Cell>\n                            <p>distance: {u.distance}</p>\n                        </Table.Cell>\n                        <Table.Cell>\n                            <Header>\n                                <Header.Subheader>\n                                    number: {u.credit_card.number} <br />\n                                    pin: {u.credit_card.pin} <br />\n                                    security: {u.credit_card.security} <br />\n                                    expiration: {u.credit_card.expiration}\n                                </Header.Subheader>\n                            </Header>\n                        </Table.Cell>\n                    </Table.Row>\n                ))}\n            </Table.Body>\n        </Table>\n    );\n};\n\nexport default UserTableExample;\n","import React, { useEffect, useState } from 'react';\nimport { fireDb } from '../../firebase';\n\nimport { Header, Image, Table } from 'semantic-ui-react';\n\nconst GameTableExample = () => {\n    const [games, setGames] = useState([]);\n\n    // Querying example for Games\n    useEffect(() => {\n        fireDb\n            .collection('BoardGames')\n            .orderBy('rating', 'desc')\n            .limit(100)\n            .get()\n            .then(docSnaps => {\n                const gameData = [];\n                docSnaps.forEach(doc => gameData.push(doc.data()));\n                setGames(gameData);\n            });\n    }, []);\n\n    console.log(games);\n\n    return (\n        <Table celled collapsing>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Game Id</Table.HeaderCell>\n                    <Table.HeaderCell>Basic Info</Table.HeaderCell>\n                    <Table.HeaderCell>Tags</Table.HeaderCell>\n                    <Table.HeaderCell>Description</Table.HeaderCell>\n                    <Table.HeaderCell>Year Published</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {games.map(g => (\n                    <Table.Row key={g.id}>\n                        <Table.Cell>{g.id}</Table.Cell>\n                        <Table.Cell>\n                            <Header as=\"h4\" image>\n                                <Image\n                                    src={g.images.original}\n                                    rounded\n                                    size=\"mini\"\n                                />\n                                <Header.Content>\n                                    {g.name}\n                                    <Header.Subheader>\n                                        max_players: {g.max_players} <br />\n                                        min_players: {g.min_players} <br />\n                                        primary_publisher: {g.primary_publisher}\n                                        <br />\n                                        rating: {g.rating}\n                                    </Header.Subheader>\n                                </Header.Content>\n                            </Header>\n                        </Table.Cell>\n                        <Table.Cell>\n                            {<p>tags: {g.tags.join(\", \")}</p>}\n                        </Table.Cell>\n                        <Table.Cell>\n                            {<p>description: {g.description}</p>}\n                        </Table.Cell>\n                        <Table.Cell>\n                            {<p>year_published: {g.year_published}</p>}\n                        </Table.Cell>\n                    </Table.Row>\n                ))}\n            </Table.Body>\n        </Table>\n    );\n};\n\nexport default GameTableExample;\n","import React, { useEffect, useState } from 'react';\nimport { fireDb } from '../../firebase';\n\nimport { Table } from 'semantic-ui-react';\n\nconst ListingsTableExample = () => {\n    const [listings, setListings] = useState([]);\n\n    // Querying example for listings\n    useEffect(() => {\n        fireDb\n            .collection('Listings')\n            .orderBy('id', 'asc')\n            .get()\n            .then(docSnaps => {\n                const listingsData = [];\n                docSnaps.forEach(doc => listingsData.push(doc.data()));\n\n                // do joins on the ids\n                const joinAndPushData = async () => {\n                    await Promise.all(\n                        listingsData.map(async (listing, i) => {\n                            const gameDoc = await fireDb\n                                .collection('BoardGames')\n                                .doc(listing.game_id)\n                                .get();\n                            listing.game = gameDoc.data();\n\n                            const lenderDoc = await fireDb\n                                .collection('Users')\n                                .doc(listing.lender_id)\n                                .get();\n                            listing.lender = lenderDoc.data();\n\n                            console.log(listing);\n\n                            listingsData[i] = listing;\n                        })\n                    );\n\n                    setListings(listingsData);\n                };\n\n                joinAndPushData();\n            });\n    }, []);\n\n    console.log(listings);\n\n    return (\n        <Table celled collapsing>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Listing Id</Table.HeaderCell>\n                    <Table.HeaderCell>Lender Id</Table.HeaderCell>\n                    <Table.HeaderCell>Raw Lender JSON</Table.HeaderCell>\n                    <Table.HeaderCell>Game Id</Table.HeaderCell>\n                    <Table.HeaderCell>Raw Game JSON</Table.HeaderCell>\n                    <Table.HeaderCell>Borrowed</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {listings.map(l => (\n                    <Table.Row key={l.id}>\n                        <Table.Cell>{l.id}</Table.Cell>\n\n                        <Table.Cell>{l.lender_id}</Table.Cell>\n\n                        <Table.Cell style={{ width: '600px' }}>\n                            <pre\n                                style={{\n                                    whiteSpace: 'pre-wrap',\n                                    maxWidth: '600px',\n                                }}\n                            >\n                                {JSON.stringify(l.lender, null, 2)}\n                            </pre>\n                        </Table.Cell>\n\n                        <Table.Cell>{l.game_id}</Table.Cell>\n\n                        <Table.Cell style={{ width: '600px' }}>\n                            <pre\n                                style={{\n                                    whiteSpace: 'pre-wrap',\n                                    maxWidth: '600px',\n                                }}\n                            >\n                                {JSON.stringify(l.game, null, 2)}\n                            </pre>\n                        </Table.Cell>\n\n                        <Table.Cell>{l.borrowed ? 'true' : 'false'}</Table.Cell>\n                    </Table.Row>\n                ))}\n            </Table.Body>\n        </Table>\n    );\n};\n\nexport default ListingsTableExample;\n","import React, { useContext } from 'react';\nimport HomePage from './Pages/Home/HomePage';\nimport ListingPage from './Pages/Listing/ListingPage';\nimport ConfirmationPage from './Pages/Confirm/ConfirmationPage';\nimport FireStoreUsersPage from './Pages/FireStoreExamples/FireStoreUsersPage';\nimport FireStoreGamesPage from './Pages/FireStoreExamples/FireStoreGamesPage';\nimport FireStoreListingsPage from './Pages/FireStoreExamples/FireStoreListingsPage';\nimport { AppState } from './context';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nfunction App() {\n  const appState = useContext(AppState);\n  const { data } = appState;\n\n  return (\n    data.length !== 0 ? \n    <BrowserRouter>\n      <Route exact path=\"/\" render={() => <HomePage />} />\n      <Route exact path=\"/:id\" render={() => <ListingPage /> } />\n      <Route exact path=\"/confirm/:id\" render={() => <ConfirmationPage />} />\n      <Route exact path=\"/firestore/users\" render={() => <FireStoreUsersPage /> } />\n      <Route exact path=\"/firestore/games\" render={() => <FireStoreGamesPage /> } />\n      <Route exact path=\"/firestore/listings\" render={() => <FireStoreListingsPage /> } />\n    </BrowserRouter>\n    : null\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { StateProvider } from './context';\n\nReactDOM.render(<StateProvider><App /></StateProvider>, document.getElementById('root'));"],"sourceRoot":""}