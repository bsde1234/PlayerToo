{"version":3,"sources":["firebase.js","api-key.js","context.js","Pages/Home/Games.js","Pages/Home/HomePage.js","Pages/Listing/RequestModal.js","Pages/Listing/ListingPage.js","Pages/FireStoreExamples/FireStoreUsersPage.js","Pages/FireStoreExamples/FireStoreGamesPage.js","Pages/FireStoreExamples/FireStoreListingsPage.js","App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","db","database","ref","fireDb","firestore","AppState","createContext","Provider","Games","data","console","log","Card","Group","itemsPerRow","map","game","key","id","as","Link","to","Content","Header","style","fontWeight","fontSize","floated","content","distance","Meta","fontStyle","minPlayers","maxPlayers","Description","color","lender","Icon","marginRight","marginLeft","name","rating","Image","size","src","images","extra","Button","basic","fluid","PageHeader","Segment","attached","backgroundColor","textAlign","HomePage","useContext","useState","relevantGames","setRelevantGames","contextRef","createRef","searched","setSearched","Sticky","context","Container","Grid","padded","Row","Input","onChange","input","target","value","temp","temp2","filter","item","toUpperCase","indexOf","updateData","bind","icon","iconPosition","placeholder","options","i","push","text","rentalDuration","RequestModal","open","setIsModalOpen","Modal","closeIcon","onClose","Column","width","avatar","paddingTop","paddingBottom","Dropdown","selection","textColor","paddingLeft","Actions","onClick","ListingPage","useParams","listing","isModalOpen","margin","Subheader","description","genre","g","Label","Feed","Event","image","Summary","Date","Rating","defaultRating","maxRating","disabled","display","justifyContent","alignItems","UserTableExample","users","setUsers","useEffect","collection","orderBy","get","then","docSnaps","usersData","forEach","doc","Table","celled","collapsing","HeaderCell","Body","u","Cell","display_pic","rounded","age","birthday","gender","phone","email","credit_card","number","pin","security","expiration","GameTableExample","games","setGames","limit","gameData","original","max_players","min_players","primary_publisher","tags","join","year_published","ListingsTableExample","listings","setListings","listingsData","a","Promise","all","game_id","gameDoc","lender_id","lenderDoc","joinAndPushData","l","whiteSpace","maxWidth","JSON","stringify","borrowed","App","length","exact","path","render","FireStoreUsersPage","FireStoreGamesPage","FireStoreListingsPage","ReactDOM","children","setData","handleData","snap","val","on","error","alert","off","api","document","getElementById"],"mappings":"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","file":"static/js/main.00eee92f.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport { apiKey } from './api-key';\n\nconst firebaseConfig = {\n  apiKey: apiKey,\n  authDomain: \"playertoo-43706.firebaseapp.com\",\n  databaseURL: \"https://playertoo-43706.firebaseio.com\",\n  projectId: \"playertoo-43706\",\n  storageBucket: \"playertoo-43706.appspot.com\",\n  messagingSenderId: \"382880258359\",\n  appId: \"1:382880258359:web:3ee6699944a42f35c7e2b2\",\n  measurementId: \"G-L95RXSW981\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const db = firebase.database().ref();\nexport const fireDb = firebase.firestore();","export const apiKey = \"AIzaSyDZuvDGMSaJunf_6ii8UosPY6sQNr-o5d8\";\nexport const scapeApiKey = \"Nl9FDBMyAo\";","import React, { useEffect, createContext, useState } from 'react';\nimport { db } from './firebase';\n\nconst AppState = createContext(null);\nconst { Provider } = AppState; \n\nconst StateProvider = ({ children }) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const handleData = snap => {\n      if (snap.val()) setData(snap.val());\n    }\n    db.on('value', handleData, error => alert(error));\n    return () => { db.off('value', handleData); };\n  }, []);\n\n  const api = { data };\n  return <Provider value={api}>{children}</Provider>;\n};\n\nexport { AppState, StateProvider };","import React from 'react';\nimport { Card, Icon, Header, Button, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst Games = ({ data }) => {\n  console.log(\"DATA FROM GAMES:\")\n  console.log(data)\n  return (\n    \n    <Card.Group itemsPerRow={1}>\n      {data.map(game => \n        <Card key={game.id} as={Link} to={`/${game.id}`}>\n          <Card.Content>\n            <Header style={{fontWeight: \"lighter\", fontSize: \"12px\"}} floated='right' content={game.distance} />\n            <Card.Header content={game.game} />\n            <Card.Meta style={{ fontStyle: \"italic\", fontSize: \"13px\" }}>\n              {game.minPlayers}-{game.maxPlayers} Players\n            </Card.Meta> \n            <Card.Description style={{ color: \"grey\", fontWeight: \"bold\", fontSize: \"12px\" }}>\n              {game.lender} {<Icon style={{marginRight: \"0px\", marginLeft: \"10px\"}} name=\"star\" />}{game.rating}\n            </Card.Description>\n          </Card.Content>\n          <Image.Group size=\"tiny\">\n            <Image src={game.images[0]} />\n            <Image src={game.images[1]} />\n            <Image src={game.images[2]} />\n          </Image.Group>\n          <Card.Content extra>\n            <Button \n              basic\n              color=\"yellow\" \n              content=\"Rent Now\" \n              fluid \n            />\n          </Card.Content>\n        </Card>\n      )}\n    </Card.Group>\n  );\n};\n\nexport default Games","import React, { useState, useContext, createRef } from 'react';\nimport { AppState } from '../../context';\nimport Games from './Games';\nimport { Button, Header, Container, Segment, Sticky, Grid, Input } from 'semantic-ui-react';\n\nconst HomePage = () => {\n  const state = useContext(AppState);\n  const { data } = state;\n  const [relevantGames, setRelevantGames]= useState(data);\n  const contextRef = createRef();\n  const [searched, setSearched]=useState(\"\");\n\n  function handleMessage(input) {\n    setSearched(input.target.value); \n    console.log(\"this is searched\")\n    console.log(searched); \n    updateData(input.target.value);\n  }\n  function updateData(searched){\n    console.log(\"reached updateData\")\n    const temp=data;\n    const temp2=data.filter(item=>(item.game.toUpperCase().indexOf(searched.toUpperCase()) !== -1));\n    \n    setRelevantGames(searched !== \"\" ? temp2 : temp);\n    console.log(\"new relevant games\");\n    console.log(relevantGames);\n  }\n  \n  return (\n    <div ref={contextRef}>\n      <Sticky context={contextRef}>\n        <PageHeader />\n      </Sticky>\n      <Container>\n        <Grid padded textAlign=\"center\">\n          <Grid.Row>\n            <Input onChange={handleMessage.bind(this)} icon='search' iconPosition='left' placeholder=\"Search...\" />\n            <Button style={{ marginLeft: \"20px\"}}  basic content=\"Filter\" /> \n          </Grid.Row>\n          <Grid.Row>\n            <Games data={relevantGames} />\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nconst PageHeader = () => {\n  return (\n    <Segment\n      basic\n      attached='top'\n      style={{ backgroundColor: \"orange\", textAlign: \"center\" }}\n      fluid=\"true\"\n    >\n      <Header content=\"Player, Too\" size=\"large\" />\n    </Segment>\n  );\n};\n\nexport default HomePage;","import React from 'react';\nimport { Modal, Grid, Button, Image, Icon, Dropdown } from 'semantic-ui-react';\n\nconst RequestModal = ({ open, setIsModalOpen, data, id }) => {\n  \n  return (\n    <Modal \n      closeIcon\n      open={open} \n      onClose={() => setIsModalOpen(false)}\n    >\n      <Modal.Header content=\"Request Boardgame\" />\n      <Modal.Content>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column  width={4}>\n              <Image avatar src=\"../../assets/images/default.jpg\" size='tiny'/>\n            </Grid.Column>\n            <Grid.Column width={12}>\n            <Grid.Row style={{fontWeight: 'bold'}}>\n                  John Doe\n              </Grid.Row>\n              <Grid.Row style={{color:'grey'}}>\n                  {data[id]['lender']}\n              </Grid.Row>\n              <Grid.Row>\n                <Icon name=\"star\" />{data[id].rating}\n              </Grid.Row>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column style={{paddingTop:\"10\", paddingBottom:\"10\"}}>\n              <Icon name=\"home\"/> Evanston, IL {/* TODO: GET FROM DATABASE */}\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row style={{paddingTop:\"10\", paddingBottom:\"10\"}}>\n            <Grid.Column>\n              <Icon name=\"envelope\"/> {data[id]['lender']+'@u.northwestern.edu' /* TODO: GET FROM DATABASE */}\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <h3>Rental Period</h3>\n              <Dropdown\n                placeholder='Select Duration'\n                fluid\n                selection\n                textColor = 'black'\n                options={options}\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <h3>Recomended Meetup Location</h3>\n              <Grid.Column style={{color:'grey', paddingLeft:'2.5%'}}>\n                Evanston, IL {/* TODO: FETCH FROM BACKEND */}\n              </Grid.Column>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button \n          onClick={() => setIsModalOpen(false)}\n          color=\"yellow\" \n          content=\"Submit Request\" \n          fluid\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nconst rentalDuration = () => {\n  let options = [];\n  for (let i = 1; i < 15; i++) {\n    options.push({ key: i, text: `${i} days`, value: i})\n  }\n  return options; \n};\n\nconst options = rentalDuration();\n\nexport default RequestModal;","import React, { useContext, useState, createRef } from 'react';\nimport { AppState } from '../../context';\nimport { useParams, Link } from 'react-router-dom';\nimport RequestModal from './RequestModal';\nimport { Grid, Feed, Rating, Segment, Image, Button, Header, Label, Container, Sticky } from 'semantic-ui-react';\n\nconst ListingPage = () => {\n  const appState = useContext(AppState);\n  const { data } = appState;\n  const contextRef = createRef();\n  const { id } = useParams(); \n  const listing = data[id];\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  \n  return (\n    <div ref={contextRef}>\n      <Sticky context={contextRef}>\n        <PageHeader />\n      </Sticky>\n      <Container>\n        <RequestModal \n          open={isModalOpen} \n          setIsModalOpen={setIsModalOpen}\n          id={id}\n          data={data} \n        />\n        <Grid>\n          <Grid.Row style={{ textAlign: \"center\"}}>\n            <Image.Group size=\"small\">\n              <Image src={listing.images[0]} />\n              <Image src={listing.images[1]} />\n              <Image src={listing.images[2]} />\n            </Image.Group>\n          </Grid.Row>\n          <Grid.Row style={{ margin: \"0px 10px 0px 10px \" }}>\n            <Header>\n              {listing.game}\n              <Header.Subheader\n                content={`${listing.minPlayers}-${listing.maxPlayers} Players`}\n                style={{ fontStyle: \"italic\", color: \"black\" }}\n              />\n              <Header.Subheader content={listing.description} />\n            </Header>\n          </Grid.Row>\n          <Grid.Row style={{ margin: \"0px 10px 0px 10px \" }}>\n            <Header size=\"small\">\n              Tags:\n              {listing.genre.map(g => <Label content={g} />)}\n            </Header>\n          </Grid.Row>\n          <Feed>\n            <Header size=\"small\">\n              Owner\n            </Header>\n            <Feed.Event>\n              <Feed.Label image='./assets/images/default.jpg' />\n              <Feed.Content>\n                <Feed.Summary>\n                  John Smith<br />\n                  <Feed.Date content='johnsmith335' />\n                  <br />\n                  <Rating defaultRating={3} maxRating={5} disabled />\n                </Feed.Summary>\n              </Feed.Content>\n            </Feed.Event>\n          </Feed>\n          <Grid.Row style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}>\n            <Button fluid color='yellow' onClick={() => setIsModalOpen(true)}>Request Rental</Button>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nconst PageHeader = () => (\n  <Segment\n    basic\n    attached='top'\n    style={{ backgroundColor: \"orange\"}}\n    fluid=\"true\"\n  >\n    <Header content=\"\" size=\"large\">\n      <Button \n        style={{ backgroundColor: \"orange\"}}\n        icon=\"arrow left\" \n        as={Link}\n        to='/'\n      />\n    </Header>\n  </Segment>\n);\n\nexport default ListingPage;\n","import React, { useEffect, useState } from 'react';\nimport { fireDb } from '../../firebase';\n\nimport { Header, Image, Table } from 'semantic-ui-react';\n\nconst UserTableExample = () => {\n    const [users, setUsers] = useState([]);\n\n    // Querying example for users\n    useEffect(() => {\n        fireDb\n            .collection('Users')\n            .orderBy('age', 'desc')\n            // .limit(100)\n            .get()\n            .then(docSnaps => {\n                const usersData = [];\n                docSnaps.forEach(doc => usersData.push(doc.data()));\n                setUsers(usersData);\n            });\n    }, []);\n\n    console.log(users);\n\n    return (\n        <Table celled collapsing>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>User Id</Table.HeaderCell>\n                    <Table.HeaderCell>Basic Info</Table.HeaderCell>\n                    <Table.HeaderCell>Contact Info</Table.HeaderCell>\n                    <Table.HeaderCell>Distance</Table.HeaderCell>\n                    <Table.HeaderCell>Credit Card Info</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {users.map(u => (\n                    <Table.Row key={u.id}>\n                        <Table.Cell>{u.id}</Table.Cell>\n                        <Table.Cell>\n                            <Header as=\"h4\" image>\n                                <Image\n                                    src={u.display_pic}\n                                    rounded\n                                    size=\"mini\"\n                                />\n                                <Header.Content>\n                                    {u.name}\n                                    <Header.Subheader>\n                                        age: {u.age} <br />\n                                        birthday: {u.birthday} <br />\n                                        gender: {u.gender} <br />\n                                        rating: {u.rating} <br />\n                                    </Header.Subheader>\n                                </Header.Content>\n                            </Header>\n                        </Table.Cell>\n                        <Table.Cell>\n                            <Header>\n                                <Header.Subheader>\n                                    phone: {u.phone} <br />\n                                    email: {u.email}\n                                </Header.Subheader>\n                            </Header>\n                        </Table.Cell>\n                        <Table.Cell>\n                            <p>distance: {u.distance}</p>\n                        </Table.Cell>\n                        <Table.Cell>\n                            <Header>\n                                <Header.Subheader>\n                                    number: {u.credit_card.number} <br />\n                                    pin: {u.credit_card.pin} <br />\n                                    security: {u.credit_card.security} <br />\n                                    expiration: {u.credit_card.expiration}\n                                </Header.Subheader>\n                            </Header>\n                        </Table.Cell>\n                    </Table.Row>\n                ))}\n            </Table.Body>\n        </Table>\n    );\n};\n\nexport default UserTableExample;\n","import React, { useEffect, useState } from 'react';\nimport { fireDb } from '../../firebase';\n\nimport { Header, Image, Table } from 'semantic-ui-react';\n\nconst GameTableExample = () => {\n    const [games, setGames] = useState([]);\n\n    // Querying example for Games\n    useEffect(() => {\n        fireDb\n            .collection('BoardGames')\n            .orderBy('rating', 'desc')\n            .limit(100)\n            .get()\n            .then(docSnaps => {\n                const gameData = [];\n                docSnaps.forEach(doc => gameData.push(doc.data()));\n                setGames(gameData);\n            });\n    }, []);\n\n    console.log(games);\n\n    return (\n        <Table celled collapsing>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Game Id</Table.HeaderCell>\n                    <Table.HeaderCell>Basic Info</Table.HeaderCell>\n                    <Table.HeaderCell>Tags</Table.HeaderCell>\n                    <Table.HeaderCell>Description</Table.HeaderCell>\n                    <Table.HeaderCell>Year Published</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {games.map(g => (\n                    <Table.Row key={g.id}>\n                        <Table.Cell>{g.id}</Table.Cell>\n                        <Table.Cell>\n                            <Header as=\"h4\" image>\n                                <Image\n                                    src={g.images.original}\n                                    rounded\n                                    size=\"mini\"\n                                />\n                                <Header.Content>\n                                    {g.name}\n                                    <Header.Subheader>\n                                        max_players: {g.max_players} <br />\n                                        min_players: {g.min_players} <br />\n                                        primary_publisher: {g.primary_publisher}\n                                        <br />\n                                        rating: {g.rating}\n                                    </Header.Subheader>\n                                </Header.Content>\n                            </Header>\n                        </Table.Cell>\n                        <Table.Cell>\n                            {<p>tags: {g.tags.join(\", \")}</p>}\n                        </Table.Cell>\n                        <Table.Cell>\n                            {<p>description: {g.description}</p>}\n                        </Table.Cell>\n                        <Table.Cell>\n                            {<p>year_published: {g.year_published}</p>}\n                        </Table.Cell>\n                    </Table.Row>\n                ))}\n            </Table.Body>\n        </Table>\n    );\n};\n\nexport default GameTableExample;\n","import React, { useEffect, useState } from 'react';\nimport { fireDb } from '../../firebase';\n\nimport { Table } from 'semantic-ui-react';\n\nconst ListingsTableExample = () => {\n    const [listings, setListings] = useState([]);\n\n    // Querying example for listings\n    useEffect(() => {\n        fireDb\n            .collection('Listings')\n            .orderBy('id', 'asc')\n            .get()\n            .then(docSnaps => {\n                const listingsData = [];\n                docSnaps.forEach(doc => listingsData.push(doc.data()));\n\n                // do joins on the ids\n                const joinAndPushData = async () => {\n                    await Promise.all(\n                        listingsData.map(async (listing, i) => {\n                            const gameDoc = await fireDb\n                                .collection('BoardGames')\n                                .doc(listing.game_id)\n                                .get();\n                            listing.game = gameDoc.data();\n\n                            const lenderDoc = await fireDb\n                                .collection('Users')\n                                .doc(listing.lender_id)\n                                .get();\n                            listing.lender = lenderDoc.data();\n\n                            console.log(listing);\n\n                            listingsData[i] = listing;\n                        })\n                    );\n\n                    setListings(listingsData);\n                };\n\n                joinAndPushData();\n            });\n    }, []);\n\n    console.log(listings);\n\n    return (\n        <Table celled collapsing>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Listing Id</Table.HeaderCell>\n                    <Table.HeaderCell>Lender Id</Table.HeaderCell>\n                    <Table.HeaderCell>Raw Lender JSON</Table.HeaderCell>\n                    <Table.HeaderCell>Game Id</Table.HeaderCell>\n                    <Table.HeaderCell>Raw Game JSON</Table.HeaderCell>\n                    <Table.HeaderCell>Borrowed</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {listings.map(l => (\n                    <Table.Row key={l.id}>\n                        <Table.Cell>{l.id}</Table.Cell>\n\n                        <Table.Cell>{l.lender_id}</Table.Cell>\n\n                        <Table.Cell style={{ width: '600px' }}>\n                            <pre\n                                style={{\n                                    whiteSpace: 'pre-wrap',\n                                    maxWidth: '600px',\n                                }}\n                            >\n                                {JSON.stringify(l.lender, null, 2)}\n                            </pre>\n                        </Table.Cell>\n\n                        <Table.Cell>{l.game_id}</Table.Cell>\n\n                        <Table.Cell style={{ width: '600px' }}>\n                            <pre\n                                style={{\n                                    whiteSpace: 'pre-wrap',\n                                    maxWidth: '600px',\n                                }}\n                            >\n                                {JSON.stringify(l.game, null, 2)}\n                            </pre>\n                        </Table.Cell>\n\n                        <Table.Cell>{l.borrowed ? 'true' : 'false'}</Table.Cell>\n                    </Table.Row>\n                ))}\n            </Table.Body>\n        </Table>\n    );\n};\n\nexport default ListingsTableExample;\n","import React, { useContext } from 'react';\nimport HomePage from './Pages/Home/HomePage';\nimport ListingPage from './Pages/Listing/ListingPage';\nimport FireStoreUsersPage from './Pages/FireStoreExamples/FireStoreUsersPage';\nimport FireStoreGamesPage from './Pages/FireStoreExamples/FireStoreGamesPage';\nimport FireStoreListingsPage from './Pages/FireStoreExamples/FireStoreListingsPage';\nimport { AppState } from './context';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nfunction App() {\n  const appState = useContext(AppState);\n  const { data } = appState;\n\n  return (\n    data.length !== 0 ? \n    <BrowserRouter>\n      <Route exact path=\"/\" render={() => <HomePage />} />\n      <Route exact path=\"/:id\" render={() => <ListingPage /> } />\n      <Route exact path=\"/firestore/users\" render={() => <FireStoreUsersPage /> } />\n      <Route exact path=\"/firestore/games\" render={() => <FireStoreGamesPage /> } />\n      <Route exact path=\"/firestore/listings\" render={() => <FireStoreListingsPage /> } />\n    </BrowserRouter>\n    : null\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { StateProvider } from './context';\n\nReactDOM.render(<StateProvider><App /></StateProvider>, document.getElementById('root'));"],"sourceRoot":""}